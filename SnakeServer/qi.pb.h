// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zhaqijie/qi.proto

#ifndef PROTOBUF_zhaqijie_2fqi_2eproto__INCLUDED
#define PROTOBUF_zhaqijie_2fqi_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_zhaqijie_2fqi_2eproto();
void protobuf_InitDefaults_zhaqijie_2fqi_2eproto();
void protobuf_AssignDesc_zhaqijie_2fqi_2eproto();
void protobuf_ShutdownFile_zhaqijie_2fqi_2eproto();

class ChessAck;
class ChessReq;
class EnterRoomAck;
class EnterRoomReq;
class GameOverAck;
class GameStartAck;
class GetRoomAck;
class GetRoomReq;
class LoginAck;
class LoginReq;
class PrepareGameAck;
class PrepareGameReq;
class Room;
class RoomUser;

enum Result {
  Success = 1,
  Error = 2
};
bool Result_IsValid(int value);
const Result Result_MIN = Success;
const Result Result_MAX = Error;
const int Result_ARRAYSIZE = Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* Result_descriptor();
inline const ::std::string& Result_Name(Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    Result_descriptor(), value);
}
inline bool Result_Parse(
    const ::std::string& name, Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Result>(
    Result_descriptor(), name, value);
}
enum PROTOCOL {
  __LoginReq = 10000,
  __LoginAck = 10001,
  __GetRoomReq = 10002,
  __GetRoomAck = 10003,
  __EnterRoomReq = 10004,
  __EnterRoomAck = 10005,
  __PrepareGameReq = 10006,
  __PrepareGameAck = 10007,
  __ChessReq = 10008,
  __ChessAck = 10009,
  __GameStartAck = 10010,
  __GameOverAck = 10011
};
bool PROTOCOL_IsValid(int value);
const PROTOCOL PROTOCOL_MIN = __LoginReq;
const PROTOCOL PROTOCOL_MAX = __GameOverAck;
const int PROTOCOL_ARRAYSIZE = PROTOCOL_MAX + 1;

const ::google::protobuf::EnumDescriptor* PROTOCOL_descriptor();
inline const ::std::string& PROTOCOL_Name(PROTOCOL value) {
  return ::google::protobuf::internal::NameOfEnum(
    PROTOCOL_descriptor(), value);
}
inline bool PROTOCOL_Parse(
    const ::std::string& name, PROTOCOL* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PROTOCOL>(
    PROTOCOL_descriptor(), name, value);
}
// ===================================================================

class RoomUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoomUser) */ {
 public:
  RoomUser();
  virtual ~RoomUser();

  RoomUser(const RoomUser& from);

  inline RoomUser& operator=(const RoomUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomUser& default_instance();

  static const RoomUser* internal_default_instance();

  void Swap(RoomUser* other);

  // implements Message ----------------------------------------------

  inline RoomUser* New() const { return New(NULL); }

  RoomUser* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomUser& from);
  void MergeFrom(const RoomUser& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomUser* other);
  void UnsafeMergeFrom(const RoomUser& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int32 state = 2;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoomUser)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_state();
  inline void clear_has_state();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_InitDefaults_zhaqijie_2fqi_2eproto_impl();
  friend void  protobuf_AddDesc_zhaqijie_2fqi_2eproto_impl();
  friend void protobuf_AssignDesc_zhaqijie_2fqi_2eproto();
  friend void protobuf_ShutdownFile_zhaqijie_2fqi_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RoomUser> RoomUser_default_instance_;

// -------------------------------------------------------------------

class LoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginReq) */ {
 public:
  LoginReq();
  virtual ~LoginReq();

  LoginReq(const LoginReq& from);

  inline LoginReq& operator=(const LoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginReq& default_instance();

  static const LoginReq* internal_default_instance();

  void Swap(LoginReq* other);

  // implements Message ----------------------------------------------

  inline LoginReq* New() const { return New(NULL); }

  LoginReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginReq& from);
  void MergeFrom(const LoginReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginReq* other);
  void UnsafeMergeFrom(const LoginReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 proID = 1 [default = 10000];
  bool has_proid() const;
  void clear_proid();
  static const int kProIDFieldNumber = 1;
  ::google::protobuf::int32 proid() const;
  void set_proid(::google::protobuf::int32 value);

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:LoginReq)
 private:
  inline void set_has_proid();
  inline void clear_has_proid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 proid_;
  friend void  protobuf_InitDefaults_zhaqijie_2fqi_2eproto_impl();
  friend void  protobuf_AddDesc_zhaqijie_2fqi_2eproto_impl();
  friend void protobuf_AssignDesc_zhaqijie_2fqi_2eproto();
  friend void protobuf_ShutdownFile_zhaqijie_2fqi_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoginReq> LoginReq_default_instance_;

// -------------------------------------------------------------------

class LoginAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginAck) */ {
 public:
  LoginAck();
  virtual ~LoginAck();

  LoginAck(const LoginAck& from);

  inline LoginAck& operator=(const LoginAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginAck& default_instance();

  static const LoginAck* internal_default_instance();

  void Swap(LoginAck* other);

  // implements Message ----------------------------------------------

  inline LoginAck* New() const { return New(NULL); }

  LoginAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginAck& from);
  void MergeFrom(const LoginAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginAck* other);
  void UnsafeMergeFrom(const LoginAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 proID = 1 [default = 10001];
  bool has_proid() const;
  void clear_proid();
  static const int kProIDFieldNumber = 1;
  ::google::protobuf::int32 proid() const;
  void set_proid(::google::protobuf::int32 value);

  // required .Result ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::Result ret() const;
  void set_ret(::Result value);

  // required int32 id = 3;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginAck)
 private:
  inline void set_has_proid();
  inline void clear_has_proid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_id();
  inline void clear_has_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 proid_;
  int ret_;
  friend void  protobuf_InitDefaults_zhaqijie_2fqi_2eproto_impl();
  friend void  protobuf_AddDesc_zhaqijie_2fqi_2eproto_impl();
  friend void protobuf_AssignDesc_zhaqijie_2fqi_2eproto();
  friend void protobuf_ShutdownFile_zhaqijie_2fqi_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoginAck> LoginAck_default_instance_;

// -------------------------------------------------------------------

class Room : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Room) */ {
 public:
  Room();
  virtual ~Room();

  Room(const Room& from);

  inline Room& operator=(const Room& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room& default_instance();

  static const Room* internal_default_instance();

  void Swap(Room* other);

  // implements Message ----------------------------------------------

  inline Room* New() const { return New(NULL); }

  Room* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room& from);
  void MergeFrom(const Room& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Room* other);
  void UnsafeMergeFrom(const Room& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomID = 1;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // required int32 count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // required int32 max = 3;
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 3;
  ::google::protobuf::int32 max() const;
  void set_max(::google::protobuf::int32 value);

  // required string roomName = 4;
  bool has_roomname() const;
  void clear_roomname();
  static const int kRoomNameFieldNumber = 4;
  const ::std::string& roomname() const;
  void set_roomname(const ::std::string& value);
  void set_roomname(const char* value);
  void set_roomname(const char* value, size_t size);
  ::std::string* mutable_roomname();
  ::std::string* release_roomname();
  void set_allocated_roomname(::std::string* roomname);

  // @@protoc_insertion_point(class_scope:Room)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_max();
  inline void clear_has_max();
  inline void set_has_roomname();
  inline void clear_has_roomname();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr roomname_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 max_;
  friend void  protobuf_InitDefaults_zhaqijie_2fqi_2eproto_impl();
  friend void  protobuf_AddDesc_zhaqijie_2fqi_2eproto_impl();
  friend void protobuf_AssignDesc_zhaqijie_2fqi_2eproto();
  friend void protobuf_ShutdownFile_zhaqijie_2fqi_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Room> Room_default_instance_;

// -------------------------------------------------------------------

class GetRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetRoomReq) */ {
 public:
  GetRoomReq();
  virtual ~GetRoomReq();

  GetRoomReq(const GetRoomReq& from);

  inline GetRoomReq& operator=(const GetRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRoomReq& default_instance();

  static const GetRoomReq* internal_default_instance();

  void Swap(GetRoomReq* other);

  // implements Message ----------------------------------------------

  inline GetRoomReq* New() const { return New(NULL); }

  GetRoomReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRoomReq& from);
  void MergeFrom(const GetRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRoomReq* other);
  void UnsafeMergeFrom(const GetRoomReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 proID = 1 [default = 10002];
  bool has_proid() const;
  void clear_proid();
  static const int kProIDFieldNumber = 1;
  ::google::protobuf::int32 proid() const;
  void set_proid(::google::protobuf::int32 value);

  // required int32 userID = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GetRoomReq)
 private:
  inline void set_has_proid();
  inline void clear_has_proid();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 proid_;
  friend void  protobuf_InitDefaults_zhaqijie_2fqi_2eproto_impl();
  friend void  protobuf_AddDesc_zhaqijie_2fqi_2eproto_impl();
  friend void protobuf_AssignDesc_zhaqijie_2fqi_2eproto();
  friend void protobuf_ShutdownFile_zhaqijie_2fqi_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetRoomReq> GetRoomReq_default_instance_;

// -------------------------------------------------------------------

class GetRoomAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetRoomAck) */ {
 public:
  GetRoomAck();
  virtual ~GetRoomAck();

  GetRoomAck(const GetRoomAck& from);

  inline GetRoomAck& operator=(const GetRoomAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRoomAck& default_instance();

  static const GetRoomAck* internal_default_instance();

  void Swap(GetRoomAck* other);

  // implements Message ----------------------------------------------

  inline GetRoomAck* New() const { return New(NULL); }

  GetRoomAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRoomAck& from);
  void MergeFrom(const GetRoomAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRoomAck* other);
  void UnsafeMergeFrom(const GetRoomAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 proID = 1 [default = 10003];
  bool has_proid() const;
  void clear_proid();
  static const int kProIDFieldNumber = 1;
  ::google::protobuf::int32 proid() const;
  void set_proid(::google::protobuf::int32 value);

  // required .Result ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::Result ret() const;
  void set_ret(::Result value);

  // repeated .Room rooms = 3;
  int rooms_size() const;
  void clear_rooms();
  static const int kRoomsFieldNumber = 3;
  const ::Room& rooms(int index) const;
  ::Room* mutable_rooms(int index);
  ::Room* add_rooms();
  ::google::protobuf::RepeatedPtrField< ::Room >*
      mutable_rooms();
  const ::google::protobuf::RepeatedPtrField< ::Room >&
      rooms() const;

  // @@protoc_insertion_point(class_scope:GetRoomAck)
 private:
  inline void set_has_proid();
  inline void clear_has_proid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Room > rooms_;
  ::google::protobuf::int32 proid_;
  int ret_;
  friend void  protobuf_InitDefaults_zhaqijie_2fqi_2eproto_impl();
  friend void  protobuf_AddDesc_zhaqijie_2fqi_2eproto_impl();
  friend void protobuf_AssignDesc_zhaqijie_2fqi_2eproto();
  friend void protobuf_ShutdownFile_zhaqijie_2fqi_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetRoomAck> GetRoomAck_default_instance_;

// -------------------------------------------------------------------

class EnterRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EnterRoomReq) */ {
 public:
  EnterRoomReq();
  virtual ~EnterRoomReq();

  EnterRoomReq(const EnterRoomReq& from);

  inline EnterRoomReq& operator=(const EnterRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterRoomReq& default_instance();

  static const EnterRoomReq* internal_default_instance();

  void Swap(EnterRoomReq* other);

  // implements Message ----------------------------------------------

  inline EnterRoomReq* New() const { return New(NULL); }

  EnterRoomReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterRoomReq& from);
  void MergeFrom(const EnterRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnterRoomReq* other);
  void UnsafeMergeFrom(const EnterRoomReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 proID = 1 [default = 10004];
  bool has_proid() const;
  void clear_proid();
  static const int kProIDFieldNumber = 1;
  ::google::protobuf::int32 proid() const;
  void set_proid(::google::protobuf::int32 value);

  // required int32 userID = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // required int32 roomID = 3;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 3;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EnterRoomReq)
 private:
  inline void set_has_proid();
  inline void clear_has_proid();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_roomid();
  inline void clear_has_roomid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 proid_;
  friend void  protobuf_InitDefaults_zhaqijie_2fqi_2eproto_impl();
  friend void  protobuf_AddDesc_zhaqijie_2fqi_2eproto_impl();
  friend void protobuf_AssignDesc_zhaqijie_2fqi_2eproto();
  friend void protobuf_ShutdownFile_zhaqijie_2fqi_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<EnterRoomReq> EnterRoomReq_default_instance_;

// -------------------------------------------------------------------

class EnterRoomAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EnterRoomAck) */ {
 public:
  EnterRoomAck();
  virtual ~EnterRoomAck();

  EnterRoomAck(const EnterRoomAck& from);

  inline EnterRoomAck& operator=(const EnterRoomAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterRoomAck& default_instance();

  static const EnterRoomAck* internal_default_instance();

  void Swap(EnterRoomAck* other);

  // implements Message ----------------------------------------------

  inline EnterRoomAck* New() const { return New(NULL); }

  EnterRoomAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterRoomAck& from);
  void MergeFrom(const EnterRoomAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnterRoomAck* other);
  void UnsafeMergeFrom(const EnterRoomAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 proID = 1 [default = 10005];
  bool has_proid() const;
  void clear_proid();
  static const int kProIDFieldNumber = 1;
  ::google::protobuf::int32 proid() const;
  void set_proid(::google::protobuf::int32 value);

  // required .Result ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::Result ret() const;
  void set_ret(::Result value);

  // repeated .RoomUser users = 3;
  int users_size() const;
  void clear_users();
  static const int kUsersFieldNumber = 3;
  const ::RoomUser& users(int index) const;
  ::RoomUser* mutable_users(int index);
  ::RoomUser* add_users();
  ::google::protobuf::RepeatedPtrField< ::RoomUser >*
      mutable_users();
  const ::google::protobuf::RepeatedPtrField< ::RoomUser >&
      users() const;

  // @@protoc_insertion_point(class_scope:EnterRoomAck)
 private:
  inline void set_has_proid();
  inline void clear_has_proid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RoomUser > users_;
  ::google::protobuf::int32 proid_;
  int ret_;
  friend void  protobuf_InitDefaults_zhaqijie_2fqi_2eproto_impl();
  friend void  protobuf_AddDesc_zhaqijie_2fqi_2eproto_impl();
  friend void protobuf_AssignDesc_zhaqijie_2fqi_2eproto();
  friend void protobuf_ShutdownFile_zhaqijie_2fqi_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<EnterRoomAck> EnterRoomAck_default_instance_;

// -------------------------------------------------------------------

class PrepareGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PrepareGameReq) */ {
 public:
  PrepareGameReq();
  virtual ~PrepareGameReq();

  PrepareGameReq(const PrepareGameReq& from);

  inline PrepareGameReq& operator=(const PrepareGameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PrepareGameReq& default_instance();

  static const PrepareGameReq* internal_default_instance();

  void Swap(PrepareGameReq* other);

  // implements Message ----------------------------------------------

  inline PrepareGameReq* New() const { return New(NULL); }

  PrepareGameReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrepareGameReq& from);
  void MergeFrom(const PrepareGameReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PrepareGameReq* other);
  void UnsafeMergeFrom(const PrepareGameReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 proID = 1 [default = 10006];
  bool has_proid() const;
  void clear_proid();
  static const int kProIDFieldNumber = 1;
  ::google::protobuf::int32 proid() const;
  void set_proid(::google::protobuf::int32 value);

  // required int32 userID = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // required int32 roomID = 3;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 3;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PrepareGameReq)
 private:
  inline void set_has_proid();
  inline void clear_has_proid();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_roomid();
  inline void clear_has_roomid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 proid_;
  friend void  protobuf_InitDefaults_zhaqijie_2fqi_2eproto_impl();
  friend void  protobuf_AddDesc_zhaqijie_2fqi_2eproto_impl();
  friend void protobuf_AssignDesc_zhaqijie_2fqi_2eproto();
  friend void protobuf_ShutdownFile_zhaqijie_2fqi_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PrepareGameReq> PrepareGameReq_default_instance_;

// -------------------------------------------------------------------

class PrepareGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PrepareGameAck) */ {
 public:
  PrepareGameAck();
  virtual ~PrepareGameAck();

  PrepareGameAck(const PrepareGameAck& from);

  inline PrepareGameAck& operator=(const PrepareGameAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PrepareGameAck& default_instance();

  static const PrepareGameAck* internal_default_instance();

  void Swap(PrepareGameAck* other);

  // implements Message ----------------------------------------------

  inline PrepareGameAck* New() const { return New(NULL); }

  PrepareGameAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrepareGameAck& from);
  void MergeFrom(const PrepareGameAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PrepareGameAck* other);
  void UnsafeMergeFrom(const PrepareGameAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 proID = 1 [default = 10007];
  bool has_proid() const;
  void clear_proid();
  static const int kProIDFieldNumber = 1;
  ::google::protobuf::int32 proid() const;
  void set_proid(::google::protobuf::int32 value);

  // required .Result ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::Result ret() const;
  void set_ret(::Result value);

  // @@protoc_insertion_point(class_scope:PrepareGameAck)
 private:
  inline void set_has_proid();
  inline void clear_has_proid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 proid_;
  int ret_;
  friend void  protobuf_InitDefaults_zhaqijie_2fqi_2eproto_impl();
  friend void  protobuf_AddDesc_zhaqijie_2fqi_2eproto_impl();
  friend void protobuf_AssignDesc_zhaqijie_2fqi_2eproto();
  friend void protobuf_ShutdownFile_zhaqijie_2fqi_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PrepareGameAck> PrepareGameAck_default_instance_;

// -------------------------------------------------------------------

class ChessReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChessReq) */ {
 public:
  ChessReq();
  virtual ~ChessReq();

  ChessReq(const ChessReq& from);

  inline ChessReq& operator=(const ChessReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessReq& default_instance();

  static const ChessReq* internal_default_instance();

  void Swap(ChessReq* other);

  // implements Message ----------------------------------------------

  inline ChessReq* New() const { return New(NULL); }

  ChessReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChessReq& from);
  void MergeFrom(const ChessReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChessReq* other);
  void UnsafeMergeFrom(const ChessReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 proID = 1 [default = 10008];
  bool has_proid() const;
  void clear_proid();
  static const int kProIDFieldNumber = 1;
  ::google::protobuf::int32 proid() const;
  void set_proid(::google::protobuf::int32 value);

  // required int32 userID = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // required int32 x = 3;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 3;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 y = 4;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 4;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChessReq)
 private:
  inline void set_has_proid();
  inline void clear_has_proid();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 proid_;
  friend void  protobuf_InitDefaults_zhaqijie_2fqi_2eproto_impl();
  friend void  protobuf_AddDesc_zhaqijie_2fqi_2eproto_impl();
  friend void protobuf_AssignDesc_zhaqijie_2fqi_2eproto();
  friend void protobuf_ShutdownFile_zhaqijie_2fqi_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ChessReq> ChessReq_default_instance_;

// -------------------------------------------------------------------

class ChessAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChessAck) */ {
 public:
  ChessAck();
  virtual ~ChessAck();

  ChessAck(const ChessAck& from);

  inline ChessAck& operator=(const ChessAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessAck& default_instance();

  static const ChessAck* internal_default_instance();

  void Swap(ChessAck* other);

  // implements Message ----------------------------------------------

  inline ChessAck* New() const { return New(NULL); }

  ChessAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChessAck& from);
  void MergeFrom(const ChessAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChessAck* other);
  void UnsafeMergeFrom(const ChessAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 proID = 1 [default = 10009];
  bool has_proid() const;
  void clear_proid();
  static const int kProIDFieldNumber = 1;
  ::google::protobuf::int32 proid() const;
  void set_proid(::google::protobuf::int32 value);

  // required .Result ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::Result ret() const;
  void set_ret(::Result value);

  // @@protoc_insertion_point(class_scope:ChessAck)
 private:
  inline void set_has_proid();
  inline void clear_has_proid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 proid_;
  int ret_;
  friend void  protobuf_InitDefaults_zhaqijie_2fqi_2eproto_impl();
  friend void  protobuf_AddDesc_zhaqijie_2fqi_2eproto_impl();
  friend void protobuf_AssignDesc_zhaqijie_2fqi_2eproto();
  friend void protobuf_ShutdownFile_zhaqijie_2fqi_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ChessAck> ChessAck_default_instance_;

// -------------------------------------------------------------------

class GameStartAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameStartAck) */ {
 public:
  GameStartAck();
  virtual ~GameStartAck();

  GameStartAck(const GameStartAck& from);

  inline GameStartAck& operator=(const GameStartAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameStartAck& default_instance();

  static const GameStartAck* internal_default_instance();

  void Swap(GameStartAck* other);

  // implements Message ----------------------------------------------

  inline GameStartAck* New() const { return New(NULL); }

  GameStartAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameStartAck& from);
  void MergeFrom(const GameStartAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GameStartAck* other);
  void UnsafeMergeFrom(const GameStartAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 proID = 1 [default = 10010];
  bool has_proid() const;
  void clear_proid();
  static const int kProIDFieldNumber = 1;
  ::google::protobuf::int32 proid() const;
  void set_proid(::google::protobuf::int32 value);

  // required int32 userID = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameStartAck)
 private:
  inline void set_has_proid();
  inline void clear_has_proid();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 proid_;
  friend void  protobuf_InitDefaults_zhaqijie_2fqi_2eproto_impl();
  friend void  protobuf_AddDesc_zhaqijie_2fqi_2eproto_impl();
  friend void protobuf_AssignDesc_zhaqijie_2fqi_2eproto();
  friend void protobuf_ShutdownFile_zhaqijie_2fqi_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GameStartAck> GameStartAck_default_instance_;

// -------------------------------------------------------------------

class GameOverAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameOverAck) */ {
 public:
  GameOverAck();
  virtual ~GameOverAck();

  GameOverAck(const GameOverAck& from);

  inline GameOverAck& operator=(const GameOverAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameOverAck& default_instance();

  static const GameOverAck* internal_default_instance();

  void Swap(GameOverAck* other);

  // implements Message ----------------------------------------------

  inline GameOverAck* New() const { return New(NULL); }

  GameOverAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameOverAck& from);
  void MergeFrom(const GameOverAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GameOverAck* other);
  void UnsafeMergeFrom(const GameOverAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 proID = 1 [default = 10011];
  bool has_proid() const;
  void clear_proid();
  static const int kProIDFieldNumber = 1;
  ::google::protobuf::int32 proid() const;
  void set_proid(::google::protobuf::int32 value);

  // required int32 userID = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameOverAck)
 private:
  inline void set_has_proid();
  inline void clear_has_proid();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 proid_;
  friend void  protobuf_InitDefaults_zhaqijie_2fqi_2eproto_impl();
  friend void  protobuf_AddDesc_zhaqijie_2fqi_2eproto_impl();
  friend void protobuf_AssignDesc_zhaqijie_2fqi_2eproto();
  friend void protobuf_ShutdownFile_zhaqijie_2fqi_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GameOverAck> GameOverAck_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomUser

// required string name = 1;
inline bool RoomUser::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomUser::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomUser::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomUser::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& RoomUser::name() const {
  // @@protoc_insertion_point(field_get:RoomUser.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomUser::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoomUser.name)
}
inline void RoomUser::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoomUser.name)
}
inline void RoomUser::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoomUser.name)
}
inline ::std::string* RoomUser::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:RoomUser.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomUser::release_name() {
  // @@protoc_insertion_point(field_release:RoomUser.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomUser::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RoomUser.name)
}

// required int32 state = 2;
inline bool RoomUser::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomUser::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomUser::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomUser::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 RoomUser::state() const {
  // @@protoc_insertion_point(field_get:RoomUser.state)
  return state_;
}
inline void RoomUser::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:RoomUser.state)
}

inline const RoomUser* RoomUser::internal_default_instance() {
  return &RoomUser_default_instance_.get();
}
// -------------------------------------------------------------------

// LoginReq

// optional int32 proID = 1 [default = 10000];
inline bool LoginReq::has_proid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginReq::set_has_proid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginReq::clear_has_proid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginReq::clear_proid() {
  proid_ = 10000;
  clear_has_proid();
}
inline ::google::protobuf::int32 LoginReq::proid() const {
  // @@protoc_insertion_point(field_get:LoginReq.proID)
  return proid_;
}
inline void LoginReq::set_proid(::google::protobuf::int32 value) {
  set_has_proid();
  proid_ = value;
  // @@protoc_insertion_point(field_set:LoginReq.proID)
}

// required string name = 2;
inline bool LoginReq::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginReq::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& LoginReq::name() const {
  // @@protoc_insertion_point(field_get:LoginReq.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginReq.name)
}
inline void LoginReq::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginReq.name)
}
inline void LoginReq::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginReq.name)
}
inline ::std::string* LoginReq::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:LoginReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_name() {
  // @@protoc_insertion_point(field_release:LoginReq.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:LoginReq.name)
}

inline const LoginReq* LoginReq::internal_default_instance() {
  return &LoginReq_default_instance_.get();
}
// -------------------------------------------------------------------

// LoginAck

// optional int32 proID = 1 [default = 10001];
inline bool LoginAck::has_proid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginAck::set_has_proid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginAck::clear_has_proid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginAck::clear_proid() {
  proid_ = 10001;
  clear_has_proid();
}
inline ::google::protobuf::int32 LoginAck::proid() const {
  // @@protoc_insertion_point(field_get:LoginAck.proID)
  return proid_;
}
inline void LoginAck::set_proid(::google::protobuf::int32 value) {
  set_has_proid();
  proid_ = value;
  // @@protoc_insertion_point(field_set:LoginAck.proID)
}

// required .Result ret = 2;
inline bool LoginAck::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginAck::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginAck::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginAck::clear_ret() {
  ret_ = 1;
  clear_has_ret();
}
inline ::Result LoginAck::ret() const {
  // @@protoc_insertion_point(field_get:LoginAck.ret)
  return static_cast< ::Result >(ret_);
}
inline void LoginAck::set_ret(::Result value) {
  assert(::Result_IsValid(value));
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:LoginAck.ret)
}

// required int32 id = 3;
inline bool LoginAck::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginAck::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginAck::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginAck::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 LoginAck::id() const {
  // @@protoc_insertion_point(field_get:LoginAck.id)
  return id_;
}
inline void LoginAck::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:LoginAck.id)
}

inline const LoginAck* LoginAck::internal_default_instance() {
  return &LoginAck_default_instance_.get();
}
// -------------------------------------------------------------------

// Room

// required int32 roomID = 1;
inline bool Room::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 Room::roomid() const {
  // @@protoc_insertion_point(field_get:Room.roomID)
  return roomid_;
}
inline void Room::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:Room.roomID)
}

// required int32 count = 2;
inline bool Room::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 Room::count() const {
  // @@protoc_insertion_point(field_get:Room.count)
  return count_;
}
inline void Room::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Room.count)
}

// required int32 max = 3;
inline bool Room::has_max() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Room::set_has_max() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Room::clear_has_max() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Room::clear_max() {
  max_ = 0;
  clear_has_max();
}
inline ::google::protobuf::int32 Room::max() const {
  // @@protoc_insertion_point(field_get:Room.max)
  return max_;
}
inline void Room::set_max(::google::protobuf::int32 value) {
  set_has_max();
  max_ = value;
  // @@protoc_insertion_point(field_set:Room.max)
}

// required string roomName = 4;
inline bool Room::has_roomname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Room::set_has_roomname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Room::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Room::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomname();
}
inline const ::std::string& Room::roomname() const {
  // @@protoc_insertion_point(field_get:Room.roomName)
  return roomname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Room::set_roomname(const ::std::string& value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Room.roomName)
}
inline void Room::set_roomname(const char* value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Room.roomName)
}
inline void Room::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Room.roomName)
}
inline ::std::string* Room::mutable_roomname() {
  set_has_roomname();
  // @@protoc_insertion_point(field_mutable:Room.roomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Room::release_roomname() {
  // @@protoc_insertion_point(field_release:Room.roomName)
  clear_has_roomname();
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Room::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    set_has_roomname();
  } else {
    clear_has_roomname();
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:Room.roomName)
}

inline const Room* Room::internal_default_instance() {
  return &Room_default_instance_.get();
}
// -------------------------------------------------------------------

// GetRoomReq

// optional int32 proID = 1 [default = 10002];
inline bool GetRoomReq::has_proid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRoomReq::set_has_proid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRoomReq::clear_has_proid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRoomReq::clear_proid() {
  proid_ = 10002;
  clear_has_proid();
}
inline ::google::protobuf::int32 GetRoomReq::proid() const {
  // @@protoc_insertion_point(field_get:GetRoomReq.proID)
  return proid_;
}
inline void GetRoomReq::set_proid(::google::protobuf::int32 value) {
  set_has_proid();
  proid_ = value;
  // @@protoc_insertion_point(field_set:GetRoomReq.proID)
}

// required int32 userID = 2;
inline bool GetRoomReq::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRoomReq::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRoomReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRoomReq::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 GetRoomReq::userid() const {
  // @@protoc_insertion_point(field_get:GetRoomReq.userID)
  return userid_;
}
inline void GetRoomReq::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GetRoomReq.userID)
}

inline const GetRoomReq* GetRoomReq::internal_default_instance() {
  return &GetRoomReq_default_instance_.get();
}
// -------------------------------------------------------------------

// GetRoomAck

// optional int32 proID = 1 [default = 10003];
inline bool GetRoomAck::has_proid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRoomAck::set_has_proid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRoomAck::clear_has_proid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRoomAck::clear_proid() {
  proid_ = 10003;
  clear_has_proid();
}
inline ::google::protobuf::int32 GetRoomAck::proid() const {
  // @@protoc_insertion_point(field_get:GetRoomAck.proID)
  return proid_;
}
inline void GetRoomAck::set_proid(::google::protobuf::int32 value) {
  set_has_proid();
  proid_ = value;
  // @@protoc_insertion_point(field_set:GetRoomAck.proID)
}

// required .Result ret = 2;
inline bool GetRoomAck::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRoomAck::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRoomAck::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRoomAck::clear_ret() {
  ret_ = 1;
  clear_has_ret();
}
inline ::Result GetRoomAck::ret() const {
  // @@protoc_insertion_point(field_get:GetRoomAck.ret)
  return static_cast< ::Result >(ret_);
}
inline void GetRoomAck::set_ret(::Result value) {
  assert(::Result_IsValid(value));
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:GetRoomAck.ret)
}

// repeated .Room rooms = 3;
inline int GetRoomAck::rooms_size() const {
  return rooms_.size();
}
inline void GetRoomAck::clear_rooms() {
  rooms_.Clear();
}
inline const ::Room& GetRoomAck::rooms(int index) const {
  // @@protoc_insertion_point(field_get:GetRoomAck.rooms)
  return rooms_.Get(index);
}
inline ::Room* GetRoomAck::mutable_rooms(int index) {
  // @@protoc_insertion_point(field_mutable:GetRoomAck.rooms)
  return rooms_.Mutable(index);
}
inline ::Room* GetRoomAck::add_rooms() {
  // @@protoc_insertion_point(field_add:GetRoomAck.rooms)
  return rooms_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Room >*
GetRoomAck::mutable_rooms() {
  // @@protoc_insertion_point(field_mutable_list:GetRoomAck.rooms)
  return &rooms_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Room >&
GetRoomAck::rooms() const {
  // @@protoc_insertion_point(field_list:GetRoomAck.rooms)
  return rooms_;
}

inline const GetRoomAck* GetRoomAck::internal_default_instance() {
  return &GetRoomAck_default_instance_.get();
}
// -------------------------------------------------------------------

// EnterRoomReq

// optional int32 proID = 1 [default = 10004];
inline bool EnterRoomReq::has_proid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterRoomReq::set_has_proid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterRoomReq::clear_has_proid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterRoomReq::clear_proid() {
  proid_ = 10004;
  clear_has_proid();
}
inline ::google::protobuf::int32 EnterRoomReq::proid() const {
  // @@protoc_insertion_point(field_get:EnterRoomReq.proID)
  return proid_;
}
inline void EnterRoomReq::set_proid(::google::protobuf::int32 value) {
  set_has_proid();
  proid_ = value;
  // @@protoc_insertion_point(field_set:EnterRoomReq.proID)
}

// required int32 userID = 2;
inline bool EnterRoomReq::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterRoomReq::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterRoomReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterRoomReq::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 EnterRoomReq::userid() const {
  // @@protoc_insertion_point(field_get:EnterRoomReq.userID)
  return userid_;
}
inline void EnterRoomReq::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:EnterRoomReq.userID)
}

// required int32 roomID = 3;
inline bool EnterRoomReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterRoomReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterRoomReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterRoomReq::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 EnterRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:EnterRoomReq.roomID)
  return roomid_;
}
inline void EnterRoomReq::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:EnterRoomReq.roomID)
}

inline const EnterRoomReq* EnterRoomReq::internal_default_instance() {
  return &EnterRoomReq_default_instance_.get();
}
// -------------------------------------------------------------------

// EnterRoomAck

// optional int32 proID = 1 [default = 10005];
inline bool EnterRoomAck::has_proid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterRoomAck::set_has_proid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterRoomAck::clear_has_proid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterRoomAck::clear_proid() {
  proid_ = 10005;
  clear_has_proid();
}
inline ::google::protobuf::int32 EnterRoomAck::proid() const {
  // @@protoc_insertion_point(field_get:EnterRoomAck.proID)
  return proid_;
}
inline void EnterRoomAck::set_proid(::google::protobuf::int32 value) {
  set_has_proid();
  proid_ = value;
  // @@protoc_insertion_point(field_set:EnterRoomAck.proID)
}

// required .Result ret = 2;
inline bool EnterRoomAck::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterRoomAck::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterRoomAck::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterRoomAck::clear_ret() {
  ret_ = 1;
  clear_has_ret();
}
inline ::Result EnterRoomAck::ret() const {
  // @@protoc_insertion_point(field_get:EnterRoomAck.ret)
  return static_cast< ::Result >(ret_);
}
inline void EnterRoomAck::set_ret(::Result value) {
  assert(::Result_IsValid(value));
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:EnterRoomAck.ret)
}

// repeated .RoomUser users = 3;
inline int EnterRoomAck::users_size() const {
  return users_.size();
}
inline void EnterRoomAck::clear_users() {
  users_.Clear();
}
inline const ::RoomUser& EnterRoomAck::users(int index) const {
  // @@protoc_insertion_point(field_get:EnterRoomAck.users)
  return users_.Get(index);
}
inline ::RoomUser* EnterRoomAck::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:EnterRoomAck.users)
  return users_.Mutable(index);
}
inline ::RoomUser* EnterRoomAck::add_users() {
  // @@protoc_insertion_point(field_add:EnterRoomAck.users)
  return users_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::RoomUser >*
EnterRoomAck::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:EnterRoomAck.users)
  return &users_;
}
inline const ::google::protobuf::RepeatedPtrField< ::RoomUser >&
EnterRoomAck::users() const {
  // @@protoc_insertion_point(field_list:EnterRoomAck.users)
  return users_;
}

inline const EnterRoomAck* EnterRoomAck::internal_default_instance() {
  return &EnterRoomAck_default_instance_.get();
}
// -------------------------------------------------------------------

// PrepareGameReq

// optional int32 proID = 1 [default = 10006];
inline bool PrepareGameReq::has_proid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PrepareGameReq::set_has_proid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PrepareGameReq::clear_has_proid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PrepareGameReq::clear_proid() {
  proid_ = 10006;
  clear_has_proid();
}
inline ::google::protobuf::int32 PrepareGameReq::proid() const {
  // @@protoc_insertion_point(field_get:PrepareGameReq.proID)
  return proid_;
}
inline void PrepareGameReq::set_proid(::google::protobuf::int32 value) {
  set_has_proid();
  proid_ = value;
  // @@protoc_insertion_point(field_set:PrepareGameReq.proID)
}

// required int32 userID = 2;
inline bool PrepareGameReq::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PrepareGameReq::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PrepareGameReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PrepareGameReq::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 PrepareGameReq::userid() const {
  // @@protoc_insertion_point(field_get:PrepareGameReq.userID)
  return userid_;
}
inline void PrepareGameReq::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:PrepareGameReq.userID)
}

// required int32 roomID = 3;
inline bool PrepareGameReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PrepareGameReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PrepareGameReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PrepareGameReq::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 PrepareGameReq::roomid() const {
  // @@protoc_insertion_point(field_get:PrepareGameReq.roomID)
  return roomid_;
}
inline void PrepareGameReq::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:PrepareGameReq.roomID)
}

inline const PrepareGameReq* PrepareGameReq::internal_default_instance() {
  return &PrepareGameReq_default_instance_.get();
}
// -------------------------------------------------------------------

// PrepareGameAck

// optional int32 proID = 1 [default = 10007];
inline bool PrepareGameAck::has_proid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PrepareGameAck::set_has_proid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PrepareGameAck::clear_has_proid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PrepareGameAck::clear_proid() {
  proid_ = 10007;
  clear_has_proid();
}
inline ::google::protobuf::int32 PrepareGameAck::proid() const {
  // @@protoc_insertion_point(field_get:PrepareGameAck.proID)
  return proid_;
}
inline void PrepareGameAck::set_proid(::google::protobuf::int32 value) {
  set_has_proid();
  proid_ = value;
  // @@protoc_insertion_point(field_set:PrepareGameAck.proID)
}

// required .Result ret = 2;
inline bool PrepareGameAck::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PrepareGameAck::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PrepareGameAck::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PrepareGameAck::clear_ret() {
  ret_ = 1;
  clear_has_ret();
}
inline ::Result PrepareGameAck::ret() const {
  // @@protoc_insertion_point(field_get:PrepareGameAck.ret)
  return static_cast< ::Result >(ret_);
}
inline void PrepareGameAck::set_ret(::Result value) {
  assert(::Result_IsValid(value));
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:PrepareGameAck.ret)
}

inline const PrepareGameAck* PrepareGameAck::internal_default_instance() {
  return &PrepareGameAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ChessReq

// optional int32 proID = 1 [default = 10008];
inline bool ChessReq::has_proid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChessReq::set_has_proid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChessReq::clear_has_proid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChessReq::clear_proid() {
  proid_ = 10008;
  clear_has_proid();
}
inline ::google::protobuf::int32 ChessReq::proid() const {
  // @@protoc_insertion_point(field_get:ChessReq.proID)
  return proid_;
}
inline void ChessReq::set_proid(::google::protobuf::int32 value) {
  set_has_proid();
  proid_ = value;
  // @@protoc_insertion_point(field_set:ChessReq.proID)
}

// required int32 userID = 2;
inline bool ChessReq::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChessReq::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChessReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChessReq::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 ChessReq::userid() const {
  // @@protoc_insertion_point(field_get:ChessReq.userID)
  return userid_;
}
inline void ChessReq::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:ChessReq.userID)
}

// required int32 x = 3;
inline bool ChessReq::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChessReq::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChessReq::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChessReq::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 ChessReq::x() const {
  // @@protoc_insertion_point(field_get:ChessReq.x)
  return x_;
}
inline void ChessReq::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:ChessReq.x)
}

// required int32 y = 4;
inline bool ChessReq::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChessReq::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChessReq::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChessReq::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 ChessReq::y() const {
  // @@protoc_insertion_point(field_get:ChessReq.y)
  return y_;
}
inline void ChessReq::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:ChessReq.y)
}

inline const ChessReq* ChessReq::internal_default_instance() {
  return &ChessReq_default_instance_.get();
}
// -------------------------------------------------------------------

// ChessAck

// optional int32 proID = 1 [default = 10009];
inline bool ChessAck::has_proid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChessAck::set_has_proid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChessAck::clear_has_proid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChessAck::clear_proid() {
  proid_ = 10009;
  clear_has_proid();
}
inline ::google::protobuf::int32 ChessAck::proid() const {
  // @@protoc_insertion_point(field_get:ChessAck.proID)
  return proid_;
}
inline void ChessAck::set_proid(::google::protobuf::int32 value) {
  set_has_proid();
  proid_ = value;
  // @@protoc_insertion_point(field_set:ChessAck.proID)
}

// required .Result ret = 2;
inline bool ChessAck::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChessAck::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChessAck::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChessAck::clear_ret() {
  ret_ = 1;
  clear_has_ret();
}
inline ::Result ChessAck::ret() const {
  // @@protoc_insertion_point(field_get:ChessAck.ret)
  return static_cast< ::Result >(ret_);
}
inline void ChessAck::set_ret(::Result value) {
  assert(::Result_IsValid(value));
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:ChessAck.ret)
}

inline const ChessAck* ChessAck::internal_default_instance() {
  return &ChessAck_default_instance_.get();
}
// -------------------------------------------------------------------

// GameStartAck

// optional int32 proID = 1 [default = 10010];
inline bool GameStartAck::has_proid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameStartAck::set_has_proid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameStartAck::clear_has_proid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameStartAck::clear_proid() {
  proid_ = 10010;
  clear_has_proid();
}
inline ::google::protobuf::int32 GameStartAck::proid() const {
  // @@protoc_insertion_point(field_get:GameStartAck.proID)
  return proid_;
}
inline void GameStartAck::set_proid(::google::protobuf::int32 value) {
  set_has_proid();
  proid_ = value;
  // @@protoc_insertion_point(field_set:GameStartAck.proID)
}

// required int32 userID = 2;
inline bool GameStartAck::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameStartAck::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameStartAck::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameStartAck::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 GameStartAck::userid() const {
  // @@protoc_insertion_point(field_get:GameStartAck.userID)
  return userid_;
}
inline void GameStartAck::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameStartAck.userID)
}

inline const GameStartAck* GameStartAck::internal_default_instance() {
  return &GameStartAck_default_instance_.get();
}
// -------------------------------------------------------------------

// GameOverAck

// optional int32 proID = 1 [default = 10011];
inline bool GameOverAck::has_proid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameOverAck::set_has_proid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameOverAck::clear_has_proid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameOverAck::clear_proid() {
  proid_ = 10011;
  clear_has_proid();
}
inline ::google::protobuf::int32 GameOverAck::proid() const {
  // @@protoc_insertion_point(field_get:GameOverAck.proID)
  return proid_;
}
inline void GameOverAck::set_proid(::google::protobuf::int32 value) {
  set_has_proid();
  proid_ = value;
  // @@protoc_insertion_point(field_set:GameOverAck.proID)
}

// required int32 userID = 2;
inline bool GameOverAck::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameOverAck::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameOverAck::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameOverAck::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 GameOverAck::userid() const {
  // @@protoc_insertion_point(field_get:GameOverAck.userID)
  return userid_;
}
inline void GameOverAck::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameOverAck.userID)
}

inline const GameOverAck* GameOverAck::internal_default_instance() {
  return &GameOverAck_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Result>() {
  return ::Result_descriptor();
}
template <> struct is_proto_enum< ::PROTOCOL> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PROTOCOL>() {
  return ::PROTOCOL_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_zhaqijie_2fqi_2eproto__INCLUDED
